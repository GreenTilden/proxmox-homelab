import{L as V,d as O,r as d,o as W,a as G,b as g,g as H,e as b,f as o,n as $,t as _,F as Y,h as J,c as A,i as X,z as x}from"./index-Dedm_Ch6.js";const Q=(s,t)=>{const n=s.__vccOpts||s;for(const[a,m]of t)n[a]=m;return n};/**
 * @license lucide-vue-next v0.525.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const K=s=>s.replace(/([a-z0-9])([A-Z])/g,"$1-$2").toLowerCase(),ee=s=>s.replace(/^([A-Z])|[\s-_]+(\w)/g,(t,n,a)=>a?a.toUpperCase():n.toLowerCase()),te=s=>{const t=ee(s);return t.charAt(0).toUpperCase()+t.slice(1)},se=(...s)=>s.filter((t,n,a)=>!!t&&t.trim()!==""&&a.indexOf(t)===n).join(" ").trim();/**
 * @license lucide-vue-next v0.525.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */var B={xmlns:"http://www.w3.org/2000/svg",width:24,height:24,viewBox:"0 0 24 24",fill:"none",stroke:"currentColor","stroke-width":2,"stroke-linecap":"round","stroke-linejoin":"round"};/**
 * @license lucide-vue-next v0.525.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const ae=({size:s,strokeWidth:t=2,absoluteStrokeWidth:n,color:a,iconNode:m,name:f,class:c,...u},{slots:h})=>V("svg",{...B,width:s||B.width,height:s||B.height,stroke:a||B.stroke,"stroke-width":n?Number(t)*24/Number(s):t,class:se("lucide",...f?[`lucide-${K(te(f))}-icon`,`lucide-${K(f)}`]:["lucide-icon"]),...u},[...m.map(y=>V(...y)),...h.default?[h.default()]:[]]);/**
 * @license lucide-vue-next v0.525.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const M=(s,t)=>(n,{slots:a})=>V(ae,{...n,iconNode:t,name:s},a);/**
 * @license lucide-vue-next v0.525.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const He=M("activity",[["path",{d:"M22 12h-2.48a2 2 0 0 0-1.93 1.46l-2.35 8.36a.25.25 0 0 1-.48 0L9.24 2.18a.25.25 0 0 0-.48 0l-2.35 8.36A2 2 0 0 1 4.49 12H2",key:"169zse"}]]);/**
 * @license lucide-vue-next v0.525.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const Ge=M("database",[["ellipse",{cx:"12",cy:"5",rx:"9",ry:"3",key:"msslwz"}],["path",{d:"M3 5V19A9 3 0 0 0 21 19V5",key:"1wlel7"}],["path",{d:"M3 12A9 3 0 0 0 21 12",key:"mv7ke4"}]]);/**
 * @license lucide-vue-next v0.525.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const Ze=M("download",[["path",{d:"M12 15V3",key:"m9g1x1"}],["path",{d:"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4",key:"ih7n3h"}],["path",{d:"m7 10 5 5 5-5",key:"brsn70"}]]);/**
 * @license lucide-vue-next v0.525.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const Ke=M("folder",[["path",{d:"M20 20a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.9a2 2 0 0 1-1.69-.9L9.6 3.9A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13a2 2 0 0 0 2 2Z",key:"1kt360"}]]);/**
 * @license lucide-vue-next v0.525.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const Ne=M("play",[["polygon",{points:"6 3 20 12 6 21 6 3",key:"1oa8hb"}]]);/**
 * @license lucide-vue-next v0.525.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const Oe=M("server",[["rect",{width:"20",height:"8",x:"2",y:"2",rx:"2",ry:"2",key:"ngkwjq"}],["rect",{width:"20",height:"8",x:"2",y:"14",rx:"2",ry:"2",key:"iecqi9"}],["line",{x1:"6",x2:"6.01",y1:"6",y2:"6",key:"16zg32"}],["line",{x1:"6",x2:"6.01",y1:"18",y2:"18",key:"nzw8ys"}]]);/**
 * @license lucide-vue-next v0.525.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const We=M("shield",[["path",{d:"M20 13c0 5-3.5 7.5-7.66 8.95a1 1 0 0 1-.67-.01C7.5 20.5 4 18 4 13V6a1 1 0 0 1 1-1c2 0 4.5-1.2 6.24-2.72a1.17 1.17 0 0 1 1.52 0C14.51 3.81 17 5 19 5a1 1 0 0 1 1 1z",key:"oel41y"}]]);/**
 * @license lucide-vue-next v0.525.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const Qe=M("trending-up",[["path",{d:"M16 7h6v6",key:"box55l"}],["path",{d:"m22 7-8.5 8.5-5-5L2 17",key:"1t1m79"}]]),oe={key:0,class:"service-metrics"},re={key:0,class:"metrics-grid"},ne={class:"metric-item"},le={class:"metric-bar"},ie={class:"metric-value"},ce={class:"metric-item"},ue={class:"metric-bar"},de={class:"metric-value"},he={class:"metric-item"},me={class:"metric-value"},pe={key:1,class:"metrics-grid"},fe={class:"metric-label"},ve={class:"metric-bar"},_e={class:"metric-value"},ye={key:2,class:"metrics-grid"},we={class:"metric-item"},ge={class:"metric-value"},be={class:"metric-item"},ke={class:"metric-bar"},Me={class:"metric-value"},Ce={class:"metric-item"},Se={class:"metric-bar"},Te={class:"metric-value"},xe={key:3,class:"metrics-grid"},qe={class:"metric-item"},Ae={class:"metric-value"},Pe={class:"metric-item"},$e={class:"metric-value"},Ee={class:"metric-item"},Ue={class:"metric-value"},Fe=O({__name:"ServiceMetrics",props:{serviceId:{},showMetrics:{type:Boolean,default:!0}},setup(s){const t=s,n=d(0),a=d(0),m=d("0.0"),f=d([]),c=d(0),u=d(0),h=d(0);d(0),d(0),d(0);const y=d(0),E=d(0),U=d(0),F=d(0);let P=null;const w=(i,r)=>i>r?"#ff0000":i>r*.7?"#ffff00":"#00ff00",S=i=>{if(i===0)return"0 B";const r=1024,v=["B","KB","MB","GB"],e=Math.floor(Math.log(i)/Math.log(r));return parseFloat((i/Math.pow(r,e)).toFixed(1))+" "+v[e]},D=async()=>{try{const r=await(await fetch('http://192.168.0.99:9090/api/v1/query?query=100 - (avg(irate(node_cpu_seconds_total{mode="idle"}[5m])) * 100)')).json();r.status==="success"&&r.data.result.length>0&&(n.value=parseFloat(r.data.result[0].value[1]));const e=await(await fetch("http://192.168.0.99:9090/api/v1/query?query=(1 - (node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes)) * 100")).json();e.status==="success"&&e.data.result.length>0&&(a.value=parseFloat(e.data.result[0].value[1]));const p=await(await fetch("http://192.168.0.99:9090/api/v1/query?query=node_load1")).json();p.status==="success"&&p.data.result.length>0&&(m.value=parseFloat(p.data.result[0].value[1]).toFixed(1))}catch(i){console.warn("Failed to fetch node metrics:",i)}},I=async()=>{try{const r=await(await fetch("http://192.168.0.99:9090/api/v1/query?query=zfs_pool_capacity_percent")).json();r.status==="success"&&(f.value=r.data.result.map(v=>({name:v.metric.pool.replace("-pool",""),usage:parseFloat(v.value[1])})))}catch(i){console.warn("Failed to fetch ZFS metrics:",i)}},R=async()=>{try{const r=await(await fetch("http://192.168.0.99:9090/api/v1/query?query=count(container_last_seen)")).json();r.status==="success"&&r.data.result.length>0&&(c.value=parseInt(r.data.result[0].value[1])),u.value=Math.random()*30+10,h.value=Math.random()*40+20}catch(i){console.warn("Failed to fetch container metrics:",i)}},z=async()=>{try{const r=await(await fetch("http://192.168.0.99:9090/api/v1/targets")).json();r.status==="success"&&(E.value=r.data.activeTargets.length,y.value=r.data.activeTargets.filter(v=>v.health==="up").length),U.value=Math.floor(Math.random()*200)+400,F.value=Math.random()*1e8+5e7}catch(i){console.warn("Failed to fetch Prometheus metrics:",i)}},T=async()=>{switch(t.serviceId){case"node-exporter":await D();break;case"zfs-exporter":await I();break;case"cadvisor":await R();break;case"prometheus":await z();break}};return W(()=>{T(),P=setInterval(T,3e4)}),G(()=>{P&&clearInterval(P)}),(i,r)=>i.showMetrics?(b(),g("div",oe,[i.serviceId==="node-exporter"?(b(),g("div",re,[o("div",ne,[r[0]||(r[0]=o("span",{class:"metric-label"},"CPU",-1)),o("div",le,[o("div",{class:"bar-fill",style:$({width:n.value+"%",backgroundColor:w(n.value,80)})},null,4)]),o("span",ie,_(n.value.toFixed(1))+"%",1)]),o("div",ce,[r[1]||(r[1]=o("span",{class:"metric-label"},"MEM",-1)),o("div",ue,[o("div",{class:"bar-fill",style:$({width:a.value+"%",backgroundColor:w(a.value,85)})},null,4)]),o("span",de,_(a.value.toFixed(1))+"%",1)]),o("div",he,[r[2]||(r[2]=o("span",{class:"metric-label"},"LOAD",-1)),o("span",me,_(m.value),1)])])):i.serviceId==="zfs-exporter"?(b(),g("div",pe,[(b(!0),g(Y,null,J(f.value,v=>(b(),g("div",{key:v.name,class:"metric-item"},[o("span",fe,_(v.name),1),o("div",ve,[o("div",{class:"bar-fill",style:$({width:v.usage+"%",backgroundColor:w(v.usage,90)})},null,4)]),o("span",_e,_(v.usage.toFixed(0))+"%",1)]))),128))])):i.serviceId==="cadvisor"?(b(),g("div",ye,[o("div",we,[r[3]||(r[3]=o("span",{class:"metric-label"},"Containers",-1)),o("span",ge,_(c.value),1)]),o("div",be,[r[4]||(r[4]=o("span",{class:"metric-label"},"CPU",-1)),o("div",ke,[o("div",{class:"bar-fill",style:$({width:u.value+"%",backgroundColor:w(u.value,70)})},null,4)]),o("span",Me,_(u.value.toFixed(1))+"%",1)]),o("div",Ce,[r[5]||(r[5]=o("span",{class:"metric-label"},"MEM",-1)),o("div",Se,[o("div",{class:"bar-fill",style:$({width:h.value+"%",backgroundColor:w(h.value,80)})},null,4)]),o("span",Te,_(h.value.toFixed(1))+"%",1)])])):i.serviceId==="prometheus"?(b(),g("div",xe,[o("div",qe,[r[6]||(r[6]=o("span",{class:"metric-label"},"Targets",-1)),o("span",Ae,_(y.value)+"/"+_(E.value),1)]),o("div",Pe,[r[7]||(r[7]=o("span",{class:"metric-label"},"Scrapes",-1)),o("span",$e,_(U.value)+"/min",1)]),o("div",Ee,[r[8]||(r[8]=o("span",{class:"metric-label"},"Storage",-1)),o("span",Ue,_(S(F.value)),1)])])):H("",!0)])):H("",!0)}}),Ye=Q(Fe,[["__scopeId","data-v-18788812"]]),De={class:"calendar-header"},ze={key:0},je={class:"calendar-content"},Be={class:"current-time"},Ie={class:"current-date"},Re=O({__name:"CalendarWidget",props:{placement:{},showTitle:{type:Boolean,default:!0},compact:{type:Boolean,default:!1}},setup(s){const t=d(""),n=d(new Date);let a=null;const m=A(()=>n.value.toLocaleDateString("en-US",{month:"long",year:"numeric"})),f=A(()=>n.value.toLocaleDateString("en-US",{weekday:"long",month:"short",day:"numeric",year:"numeric"})),c=()=>{const u=new Date;n.value=u,t.value=u.toLocaleTimeString("en-US",{hour:"2-digit",minute:"2-digit",hour12:!0})};return W(()=>{c(),a=setInterval(c,1e3)}),G(()=>{a&&clearInterval(a)}),(u,h)=>(b(),g("div",{class:X(["calendar-widget",`calendar-widget--${u.placement}`])},[o("div",De,[u.showTitle?(b(),g("h3",ze,_(m.value),1)):H("",!0)]),o("div",je,[o("div",Be,_(t.value),1),o("div",Ie,_(f.value),1)])],2))}}),Je=Q(Re,[["__scopeId","data-v-dc40baed"]]);class Le{constructor(t){this.baseUrl="http://192.168.0.99:9090",this.cache=new Map,this.requestAbortControllers=new Map,t&&(this.baseUrl=t)}async query(t,n=!0){const a=`query:${t}`;if(n){const c=this.cache.get(a);if(c&&Date.now()-c.timestamp<3e4)return c.data}const m=this.requestAbortControllers.get(a);m&&m.abort();const f=new AbortController;this.requestAbortControllers.set(a,f);try{const c=`${this.baseUrl}/api/v1/query?query=${encodeURIComponent(t)}`,u=await fetch(c,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json"},signal:f.signal});if(!u.ok)throw new Error(`Prometheus API error: ${u.status} ${u.statusText}`);const h=await u.json();return h.status==="success"&&this.cache.set(a,{data:h,timestamp:Date.now()}),h}catch(c){throw c.name==="AbortError"?new Error("Request cancelled"):(console.error("Prometheus query failed:",t,c),new Error(`Failed to fetch metrics: ${c.message}`))}finally{this.requestAbortControllers.delete(a)}}async queryRange(t,n,a,m){const f=new URLSearchParams({query:t,start:n.toString(),end:a.toString(),step:m.toString()}),c=new AbortController,u=setTimeout(()=>c.abort(),1e4);try{const h=`${this.baseUrl}/api/v1/query_range?${f}`,y=await fetch(h,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json"},signal:c.signal});if(clearTimeout(u),!y.ok)throw new Error(`Prometheus range query error: ${y.status} ${y.statusText}`);return await y.json()}catch(h){throw clearTimeout(u),console.error("Prometheus range query failed:",t,h),new Error(`Failed to fetch metrics range: ${h.message}`)}}async getTargets(){const t=new AbortController,n=setTimeout(()=>t.abort(),5e3);try{const a=await fetch(`${this.baseUrl}/api/v1/targets`,{method:"GET",headers:{Accept:"application/json"},signal:t.signal});if(clearTimeout(n),!a.ok)throw new Error(`Failed to fetch targets: ${a.status}`);return await a.json()}catch(a){throw clearTimeout(n),new Error(`Failed to fetch Prometheus targets: ${a.message}`)}}async isHealthy(){try{return(await fetch(`${this.baseUrl}/-/healthy`,{method:"GET",signal:AbortSignal.timeout(3e3)})).ok}catch{return!1}}clearCache(t){t?this.cache.delete(`query:${t}`):this.cache.clear()}cancelAllRequests(){this.requestAbortControllers.forEach(t=>t.abort()),this.requestAbortControllers.clear()}}const k=new Le,q={cpuUsage:'100 - (avg(rate(node_cpu_seconds_total{mode="idle"}[5m])) * 100)',cpuCores:"count(count(node_cpu_seconds_total) by (cpu))",loadAverage1m:"node_load1",loadAverage5m:"node_load5",loadAverage15m:"node_load15",memoryTotal:"node_memory_MemTotal_bytes",memoryAvailable:"node_memory_MemAvailable_bytes",memoryUsagePercent:"100 * (1 - node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes)",memoryUsageBytes:"node_memory_MemTotal_bytes - node_memory_MemAvailable_bytes",diskUsagePercent:"100 - (node_filesystem_avail_bytes / node_filesystem_size_bytes * 100)",diskTotal:'node_filesystem_size_bytes{fstype!="tmpfs",mountpoint="/"}',diskUsed:'node_filesystem_size_bytes{fstype!="tmpfs",mountpoint="/"} - node_filesystem_free_bytes{fstype!="tmpfs",mountpoint="/"}',diskAvailable:'node_filesystem_avail_bytes{fstype!="tmpfs",mountpoint="/"}',networkReceiveBytesRate:'rate(node_network_receive_bytes_total{device!="lo"}[5m])',networkTransmitBytesRate:'rate(node_network_transmit_bytes_total{device!="lo"}[5m])',networkReceiveTotal:'sum(node_network_receive_bytes_total{device!="lo"})',networkTransmitTotal:'sum(node_network_transmit_bytes_total{device!="lo"})',uptime:"node_time_seconds - node_boot_time_seconds",serviceHealth:"up",prometheusTargets:"prometheus_target_health",zfsPoolHealth:"zfs_pool_health",zfsPoolUsagePercent:"zfs_pool_used_bytes / zfs_pool_size_bytes * 100",zfsPoolAvailableBytes:"zfs_pool_available_bytes",containerCount:'count(container_last_seen{name!=""})',containerCpuUsage:'sum(rate(container_cpu_usage_seconds_total{name!=""}[5m])) by (name)',containerMemoryUsage:'sum(container_memory_usage_bytes{name!=""}) by (name)',qbittorrentActiveDownloads:"qbittorrent_active_downloads",qbittorrentDownloadSpeed:"qbittorrent_download_speed_bytes",qbittorrentUploadSpeed:"qbittorrent_upload_speed_bytes"},N={extractValue(s){var n,a;if(!s||s.length===0)return 0;const t=(a=(n=s[0])==null?void 0:n.value)==null?void 0:a[1];return t?parseFloat(t):0},extractValues(s){return s.map(t=>({label:Object.values(t.metric).join(" "),value:t.value?parseFloat(t.value[1]):0}))},formatBytes(s){if(s===0)return"0 B";const t=1024,n=["B","KB","MB","GB","TB"],a=Math.floor(Math.log(s)/Math.log(t));return parseFloat((s/Math.pow(t,a)).toFixed(2))+" "+n[a]},formatPercent(s){return`${Math.round(s*100)/100}%`},formatUptime(s){const t=Math.floor(s/86400),n=Math.floor(s%86400/3600),a=Math.floor(s%3600/60);return t>0?`${t}d ${n}h ${a}m`:n>0?`${n}h ${a}m`:`${a}m`}},Xe=()=>{const s=d([{id:"prometheus",name:"Prometheus",description:"Metrics Collection System",status:"unknown",lastChecked:null,responseTime:null,job:"prometheus",instance:"localhost:9090",url:"http://192.168.0.99:9090"},{id:"node-exporter",name:"Node Exporter",description:"System Metrics Exporter",status:"unknown",lastChecked:null,responseTime:null,job:"node-exporter",instance:"proxmox-host",url:"http://192.168.0.99:9100",healthEndpoint:"http://192.168.0.99:9100"},{id:"cadvisor",name:"cAdvisor",description:"Container Metrics",status:"unknown",lastChecked:null,responseTime:null,job:"cadvisor",instance:"container-metrics",url:"http://192.168.0.99:8082/containers/",healthEndpoint:"http://192.168.0.99:8082"},{id:"zfs-exporter",name:"ZFS Exporter",description:"Storage Pool Metrics",status:"unknown",lastChecked:null,responseTime:null,job:"zfs-exporter",instance:"zfs-pools",url:"http://192.168.0.99:9101/metrics",healthEndpoint:"http://192.168.0.99:9101"},{id:"qbittorrent",name:"qBittorrent",description:"Torrent Client Web Interface",status:"unknown",lastChecked:null,responseTime:null,job:"qbittorrent",instance:"torrent-client",url:"http://192.168.0.111:8112/",healthEndpoint:"http://192.168.0.111:8112"},{id:"plex",name:"Plex Media Server",description:"Media Streaming Platform",status:"unknown",lastChecked:null,responseTime:null,job:"plex-server",instance:"media-server",url:"http://192.168.0.99:32400",healthEndpoint:"http://192.168.0.99:32400/identity"},{id:"filebrowser",name:"File Browser",description:"File Management Interface",status:"unknown",lastChecked:null,responseTime:null,job:"filebrowser",instance:"file-manager",url:"http://192.168.0.99:8080",healthEndpoint:"http://192.168.0.99:8080/health"},{id:"proxmox",name:"Proxmox VE",description:"Virtualization Management",status:"unknown",lastChecked:null,responseTime:null,job:"proxmox",instance:"hypervisor",url:"https://192.168.0.99:8006",healthEndpoint:"https://192.168.0.99:8006/api2/json/version"}]),t=d({totalServices:0,onlineServices:0,offlineServices:0,healthyPercentage:0,lastUpdateTime:null}),n=d(!1),a=d(""),m=d(!0),f=d(!1);let c=null;const u=A(()=>s.value.filter(e=>e.status==="online")),h=A(()=>s.value.filter(e=>e.status==="offline")),y=A(()=>s.value.filter(e=>e.status==="checking")),E=A(()=>s.value.filter(e=>e.status==="offline"&&["prometheus","node-exporter"].includes(e.id))),U=async e=>{try{const l=`up{job="${e.job}",instance="${e.instance}"}`,p=await k.query(l);if(p.status==="success"&&p.data.result.length>0){const C=N.extractValue(p.data.result);e.status=C===1?"online":"offline",e.lastChecked=new Date,await P(e)}else e.status="unknown",e.lastChecked=new Date}catch(l){console.warn(`Prometheus check failed for ${e.name}:`,l),e.status="unknown",e.lastChecked=new Date}},F=async e=>{if(!e.healthEndpoint)return;const l=Date.now();try{const p=new AbortController,C=setTimeout(()=>p.abort(),5e3),L=await fetch(e.healthEndpoint,{method:"GET",signal:p.signal,mode:"no-cors"});clearTimeout(C),e.responseTime=Date.now()-l,e.lastChecked=new Date,e.status="online"}catch(p){e.responseTime=Date.now()-l,e.lastChecked=new Date,e.status="offline",console.warn(`HTTP health check failed for ${e.name}:`,p)}},P=async e=>{try{const l=[];switch(l.push(k.query("node_time_seconds - node_boot_time_seconds").catch(()=>null)),e.id){case"qbittorrent-exporter":l.push(k.query(q.qbittorrentActiveDownloads).catch(()=>null),k.query(q.qbittorrentDownloadSpeed).catch(()=>null),k.query(q.qbittorrentUploadSpeed).catch(()=>null));break;case"zfs-exporter":l.push(k.query(q.zfsPoolHealth).catch(()=>null),k.query(q.zfsPoolUsagePercent).catch(()=>null));break;case"cadvisor":l.push(k.query(q.containerCount).catch(()=>null));break}const p=await Promise.allSettled(l);e.metrics||(e.metrics={}),p.forEach((C,L)=>{var Z;if(C.status==="fulfilled"&&((Z=C.value)==null?void 0:Z.status)==="success"){const j=N.extractValue(C.value.data.result);switch(L){case 0:e.metrics.uptime=j;break;default:if(e.id==="qbittorrent-exporter")switch(L){case 1:e.metrics.customMetrics={...e.metrics.customMetrics,activeDownloads:j};break;case 2:e.metrics.customMetrics={...e.metrics.customMetrics,downloadSpeed:j};break;case 3:e.metrics.customMetrics={...e.metrics.customMetrics,uploadSpeed:j};break}break}}})}catch(l){console.warn(`Failed to fetch metrics for ${e.name}:`,l)}},w=async e=>{e.status="checking",await U(e),e.status==="unknown"&&e.healthEndpoint&&await F(e)},S=async()=>{try{n.value=!0,a.value="";const e=s.value.map(l=>w(l));await Promise.allSettled(e),D()}catch(e){console.error("Failed to check services health:",e),a.value=e instanceof Error?e.message:"Unknown error"}finally{n.value=!1}},D=()=>{const e=s.value.length,l=u.value.length,p=h.value.length;t.value={totalServices:e,onlineServices:l,offlineServices:p,healthyPercentage:e>0?l/e*100:0,lastUpdateTime:new Date}},I=async e=>{const l=s.value.find(p=>p.id===e);l&&(await w(l),D())},R=async()=>{f.value=!0,await S(),f.value=!1},z=()=>{c||(S(),c=setInterval(S,6e4))},T=()=>{c&&(clearInterval(c),c=null)},i=()=>{m.value=!m.value,m.value?z():T()},r=e=>s.value.find(l=>l.id===e),v=e=>s.value.filter(l=>l.status===e);return G(()=>{T()}),{services:x(s),serviceMetrics:x(t),isLoading:x(n),error:x(a),isAutoRefreshEnabled:x(m),isRefreshing:x(f),onlineServices:u,offlineServices:h,checkingServices:y,criticalServices:E,checkServiceHealth:w,checkAllServicesHealth:S,refreshService:I,refreshAllServices:R,startAutoRefresh:z,stopAutoRefresh:T,toggleAutoRefresh:i,getServiceById:r,getServicesByStatus:v}};export{He as A,Je as C,Ze as D,Ke as F,Ne as P,Oe as S,Qe as T,Q as _,Ge as a,We as b,Ye as c,Xe as u};
