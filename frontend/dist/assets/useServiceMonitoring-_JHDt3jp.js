import{K as S,h as y,c as k,U as V,y as _}from"./index-Ct1RomOX.js";const N=(o,t)=>{const n=o.__vccOpts||o;for(const[s,c]of t)n[s]=c;return n};/**
 * @license lucide-vue-next v0.525.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const E=o=>o.replace(/([a-z0-9])([A-Z])/g,"$1-$2").toLowerCase(),H=o=>o.replace(/^([A-Z])|[\s-_]+(\w)/g,(t,n,s)=>s?s.toUpperCase():n.toLowerCase()),L=o=>{const t=H(o);return t.charAt(0).toUpperCase()+t.slice(1)},G=(...o)=>o.filter((t,n,s)=>!!t&&t.trim()!==""&&s.indexOf(t)===n).join(" ").trim();/**
 * @license lucide-vue-next v0.525.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */var v={xmlns:"http://www.w3.org/2000/svg",width:24,height:24,viewBox:"0 0 24 24",fill:"none",stroke:"currentColor","stroke-width":2,"stroke-linecap":"round","stroke-linejoin":"round"};/**
 * @license lucide-vue-next v0.525.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const K=({size:o,strokeWidth:t=2,absoluteStrokeWidth:n,color:s,iconNode:c,name:u,class:r,...h},{slots:l})=>S("svg",{...v,width:o||v.width,height:o||v.height,stroke:s||v.stroke,"stroke-width":n?Number(t)*24/Number(o):t,class:G("lucide",...u?[`lucide-${E(L(u))}-icon`,`lucide-${E(u)}`]:["lucide-icon"]),...h},[...c.map(d=>S(...d)),...l.default?[l.default()]:[]]);/**
 * @license lucide-vue-next v0.525.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const p=(o,t)=>(n,{slots:s})=>S(K,{...n,iconNode:t,name:o},s);/**
 * @license lucide-vue-next v0.525.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const Q=p("activity",[["path",{d:"M22 12h-2.48a2 2 0 0 0-1.93 1.46l-2.35 8.36a.25.25 0 0 1-.48 0L9.24 2.18a.25.25 0 0 0-.48 0l-2.35 8.36A2 2 0 0 1 4.49 12H2",key:"169zse"}]]);/**
 * @license lucide-vue-next v0.525.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const Y=p("database",[["ellipse",{cx:"12",cy:"5",rx:"9",ry:"3",key:"msslwz"}],["path",{d:"M3 5V19A9 3 0 0 0 21 19V5",key:"1wlel7"}],["path",{d:"M3 12A9 3 0 0 0 21 12",key:"mv7ke4"}]]);/**
 * @license lucide-vue-next v0.525.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const J=p("download",[["path",{d:"M12 15V3",key:"m9g1x1"}],["path",{d:"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4",key:"ih7n3h"}],["path",{d:"m7 10 5 5 5-5",key:"brsn70"}]]);/**
 * @license lucide-vue-next v0.525.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const W=p("folder",[["path",{d:"M20 20a2 2 0 0 0 2-2V8a2 2 0 0 0-2-2h-7.9a2 2 0 0 1-1.69-.9L9.6 3.9A2 2 0 0 0 7.93 3H4a2 2 0 0 0-2 2v13a2 2 0 0 0 2 2Z",key:"1kt360"}]]);/**
 * @license lucide-vue-next v0.525.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const X=p("play",[["polygon",{points:"6 3 20 12 6 21 6 3",key:"1oa8hb"}]]);/**
 * @license lucide-vue-next v0.525.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const ee=p("server",[["rect",{width:"20",height:"8",x:"2",y:"2",rx:"2",ry:"2",key:"ngkwjq"}],["rect",{width:"20",height:"8",x:"2",y:"14",rx:"2",ry:"2",key:"iecqi9"}],["line",{x1:"6",x2:"6.01",y1:"6",y2:"6",key:"16zg32"}],["line",{x1:"6",x2:"6.01",y1:"18",y2:"18",key:"nzw8ys"}]]);/**
 * @license lucide-vue-next v0.525.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const te=p("shield",[["path",{d:"M20 13c0 5-3.5 7.5-7.66 8.95a1 1 0 0 1-.67-.01C7.5 20.5 4 18 4 13V6a1 1 0 0 1 1-1c2 0 4.5-1.2 6.24-2.72a1.17 1.17 0 0 1 1.52 0C14.51 3.81 17 5 19 5a1 1 0 0 1 1 1z",key:"oel41y"}]]);/**
 * @license lucide-vue-next v0.525.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const oe=p("trending-up",[["path",{d:"M16 7h6v6",key:"box55l"}],["path",{d:"m22 7-8.5 8.5-5-5L2 17",key:"1t1m79"}]]);class Z{constructor(t){this.baseUrl="http://192.168.0.99:9090",this.cache=new Map,this.requestAbortControllers=new Map,t&&(this.baseUrl=t)}async query(t,n=!0){const s=`query:${t}`;if(n){const r=this.cache.get(s);if(r&&Date.now()-r.timestamp<3e4)return r.data}const c=this.requestAbortControllers.get(s);c&&c.abort();const u=new AbortController;this.requestAbortControllers.set(s,u);try{const r=`${this.baseUrl}/api/v1/query?query=${encodeURIComponent(t)}`,h=await fetch(r,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json"},signal:u.signal});if(!h.ok)throw new Error(`Prometheus API error: ${h.status} ${h.statusText}`);const l=await h.json();return l.status==="success"&&this.cache.set(s,{data:l,timestamp:Date.now()}),l}catch(r){throw r.name==="AbortError"?new Error("Request cancelled"):(console.error("Prometheus query failed:",t,r),new Error(`Failed to fetch metrics: ${r.message}`))}finally{this.requestAbortControllers.delete(s)}}async queryRange(t,n,s,c){const u=new URLSearchParams({query:t,start:n.toString(),end:s.toString(),step:c.toString()}),r=new AbortController,h=setTimeout(()=>r.abort(),1e4);try{const l=`${this.baseUrl}/api/v1/query_range?${u}`,d=await fetch(l,{method:"GET",headers:{Accept:"application/json","Content-Type":"application/json"},signal:r.signal});if(clearTimeout(h),!d.ok)throw new Error(`Prometheus range query error: ${d.status} ${d.statusText}`);return await d.json()}catch(l){throw clearTimeout(h),console.error("Prometheus range query failed:",t,l),new Error(`Failed to fetch metrics range: ${l.message}`)}}async getTargets(){const t=new AbortController,n=setTimeout(()=>t.abort(),5e3);try{const s=await fetch(`${this.baseUrl}/api/v1/targets`,{method:"GET",headers:{Accept:"application/json"},signal:t.signal});if(clearTimeout(n),!s.ok)throw new Error(`Failed to fetch targets: ${s.status}`);return await s.json()}catch(s){throw clearTimeout(n),new Error(`Failed to fetch Prometheus targets: ${s.message}`)}}async isHealthy(){try{return(await fetch(`${this.baseUrl}/-/healthy`,{method:"GET",signal:AbortSignal.timeout(3e3)})).ok}catch{return!1}}clearCache(t){t?this.cache.delete(`query:${t}`):this.cache.clear()}cancelAllRequests(){this.requestAbortControllers.forEach(t=>t.abort()),this.requestAbortControllers.clear()}}const m=new Z,w={cpuUsage:'100 - (avg(rate(node_cpu_seconds_total{mode="idle"}[5m])) * 100)',cpuCores:"count(count(node_cpu_seconds_total) by (cpu))",loadAverage1m:"node_load1",loadAverage5m:"node_load5",loadAverage15m:"node_load15",memoryTotal:"node_memory_MemTotal_bytes",memoryAvailable:"node_memory_MemAvailable_bytes",memoryUsagePercent:"100 * (1 - node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes)",memoryUsageBytes:"node_memory_MemTotal_bytes - node_memory_MemAvailable_bytes",diskUsagePercent:"100 - (node_filesystem_avail_bytes / node_filesystem_size_bytes * 100)",diskTotal:'node_filesystem_size_bytes{fstype!="tmpfs",mountpoint="/"}',diskUsed:'node_filesystem_size_bytes{fstype!="tmpfs",mountpoint="/"} - node_filesystem_free_bytes{fstype!="tmpfs",mountpoint="/"}',diskAvailable:'node_filesystem_avail_bytes{fstype!="tmpfs",mountpoint="/"}',networkReceiveBytesRate:'rate(node_network_receive_bytes_total{device!="lo"}[5m])',networkTransmitBytesRate:'rate(node_network_transmit_bytes_total{device!="lo"}[5m])',networkReceiveTotal:'sum(node_network_receive_bytes_total{device!="lo"})',networkTransmitTotal:'sum(node_network_transmit_bytes_total{device!="lo"})',uptime:"node_time_seconds - node_boot_time_seconds",serviceHealth:"up",prometheusTargets:"prometheus_target_health",zfsPoolHealth:"zfs_pool_health",zfsPoolUsagePercent:"zfs_pool_used_bytes / zfs_pool_size_bytes * 100",zfsPoolAvailableBytes:"zfs_pool_available_bytes",containerCount:'count(container_last_seen{name!=""})',containerCpuUsage:'sum(rate(container_cpu_usage_seconds_total{name!=""}[5m])) by (name)',containerMemoryUsage:'sum(container_memory_usage_bytes{name!=""}) by (name)',qbittorrentActiveDownloads:"qbittorrent_active_downloads",qbittorrentDownloadSpeed:"qbittorrent_download_speed_bytes",qbittorrentUploadSpeed:"qbittorrent_upload_speed_bytes"},P={extractValue(o){var n,s;if(!o||o.length===0)return 0;const t=(s=(n=o[0])==null?void 0:n.value)==null?void 0:s[1];return t?parseFloat(t):0},extractValues(o){return o.map(t=>({label:Object.values(t.metric).join(" "),value:t.value?parseFloat(t.value[1]):0}))},formatBytes(o){if(o===0)return"0 B";const t=1024,n=["B","KB","MB","GB","TB"],s=Math.floor(Math.log(o)/Math.log(t));return parseFloat((o/Math.pow(t,s)).toFixed(2))+" "+n[s]},formatPercent(o){return`${Math.round(o*100)/100}%`},formatUptime(o){const t=Math.floor(o/86400),n=Math.floor(o%86400/3600),s=Math.floor(o%3600/60);return t>0?`${t}d ${n}h ${s}m`:n>0?`${n}h ${s}m`:`${s}m`}},se=()=>{const o=y([{id:"prometheus",name:"Prometheus",description:"Metrics Collection System",status:"unknown",lastChecked:null,responseTime:null,job:"prometheus",instance:"localhost:9090",url:"http://192.168.0.99:9090"},{id:"node-exporter",name:"Node Exporter",description:"System Metrics Exporter",status:"unknown",lastChecked:null,responseTime:null,job:"node-exporter",instance:"proxmox-host",url:"http://192.168.0.99:9100",healthEndpoint:"http://192.168.0.99:9100"},{id:"cadvisor",name:"cAdvisor",description:"Container Metrics",status:"unknown",lastChecked:null,responseTime:null,job:"cadvisor",instance:"container-metrics",url:"http://192.168.0.99:8082/containers/",healthEndpoint:"http://192.168.0.99:8082"},{id:"zfs-exporter",name:"ZFS Exporter",description:"Storage Pool Metrics",status:"unknown",lastChecked:null,responseTime:null,job:"zfs-exporter",instance:"zfs-pools",url:"http://192.168.0.99:9101/metrics",healthEndpoint:"http://192.168.0.99:9101"},{id:"qbittorrent",name:"qBittorrent",description:"Torrent Client Web Interface",status:"unknown",lastChecked:null,responseTime:null,job:"qbittorrent",instance:"torrent-client",url:"http://192.168.0.111:8112/",healthEndpoint:"http://192.168.0.111:8112"},{id:"plex",name:"Plex Media Server",description:"Media Streaming Platform",status:"unknown",lastChecked:null,responseTime:null,job:"plex-server",instance:"media-server",url:"http://192.168.0.99:32400",healthEndpoint:"http://192.168.0.99:32400/identity"},{id:"filebrowser",name:"File Browser",description:"File Management Interface",status:"unknown",lastChecked:null,responseTime:null,job:"filebrowser",instance:"file-manager",url:"http://192.168.0.99:8080",healthEndpoint:"http://192.168.0.99:8080/health"},{id:"proxmox",name:"Proxmox VE",description:"Virtualization Management",status:"unknown",lastChecked:null,responseTime:null,job:"proxmox",instance:"hypervisor",url:"https://192.168.0.99:8006",healthEndpoint:"https://192.168.0.99:8006/api2/json/version"}]),t=y({totalServices:0,onlineServices:0,offlineServices:0,healthyPercentage:0,lastUpdateTime:null}),n=y(!1),s=y(""),c=y(!0),u=y(!1);let r=null;const h=k(()=>o.value.filter(e=>e.status==="online")),l=k(()=>o.value.filter(e=>e.status==="offline")),d=k(()=>o.value.filter(e=>e.status==="checking")),$=k(()=>o.value.filter(e=>e.status==="offline"&&["prometheus","node-exporter"].includes(e.id))),U=async e=>{try{const a=`up{job="${e.job}",instance="${e.instance}"}`,i=await m.query(a);if(i.status==="success"&&i.data.result.length>0){const f=P.extractValue(i.data.result);e.status=f===1?"online":"offline",e.lastChecked=new Date,await z(e)}else e.status="unknown",e.lastChecked=new Date}catch(a){console.warn(`Prometheus check failed for ${e.name}:`,a),e.status="unknown",e.lastChecked=new Date}},j=async e=>{if(!e.healthEndpoint)return;const a=Date.now();try{const i=new AbortController,f=setTimeout(()=>i.abort(),5e3),M=await fetch(e.healthEndpoint,{method:"GET",signal:i.signal,mode:"no-cors"});clearTimeout(f),e.responseTime=Date.now()-a,e.lastChecked=new Date,e.status="online"}catch(i){e.responseTime=Date.now()-a,e.lastChecked=new Date,e.status="offline",console.warn(`HTTP health check failed for ${e.name}:`,i)}},z=async e=>{try{const a=[];switch(a.push(m.query("node_time_seconds - node_boot_time_seconds").catch(()=>null)),e.id){case"qbittorrent-exporter":a.push(m.query(w.qbittorrentActiveDownloads).catch(()=>null),m.query(w.qbittorrentDownloadSpeed).catch(()=>null),m.query(w.qbittorrentUploadSpeed).catch(()=>null));break;case"zfs-exporter":a.push(m.query(w.zfsPoolHealth).catch(()=>null),m.query(w.zfsPoolUsagePercent).catch(()=>null));break;case"cadvisor":a.push(m.query(w.containerCount).catch(()=>null));break}const i=await Promise.allSettled(a);e.metrics||(e.metrics={}),i.forEach((f,M)=>{var q;if(f.status==="fulfilled"&&((q=f.value)==null?void 0:q.status)==="success"){const g=P.extractValue(f.value.data.result);switch(M){case 0:e.metrics.uptime=g;break;default:if(e.id==="qbittorrent-exporter")switch(M){case 1:e.metrics.customMetrics={...e.metrics.customMetrics,activeDownloads:g};break;case 2:e.metrics.customMetrics={...e.metrics.customMetrics,downloadSpeed:g};break;case 3:e.metrics.customMetrics={...e.metrics.customMetrics,uploadSpeed:g};break}break}}})}catch(a){console.warn(`Failed to fetch metrics for ${e.name}:`,a)}},C=async e=>{e.status="checking",await U(e),e.status==="unknown"&&e.healthEndpoint&&await j(e)},b=async()=>{try{n.value=!0,s.value="";const e=o.value.map(a=>C(a));await Promise.allSettled(e),x()}catch(e){console.error("Failed to check services health:",e),s.value=e instanceof Error?e.message:"Unknown error"}finally{n.value=!1}},x=()=>{const e=o.value.length,a=h.value.length,i=l.value.length;t.value={totalServices:e,onlineServices:a,offlineServices:i,healthyPercentage:e>0?a/e*100:0,lastUpdateTime:new Date}},D=async e=>{const a=o.value.find(i=>i.id===e);a&&(await C(a),x())},B=async()=>{u.value=!0,await b(),u.value=!1},A=()=>{r||(b(),r=setInterval(b,6e4))},T=()=>{r&&(clearInterval(r),r=null)},R=()=>{c.value=!c.value,c.value?A():T()},F=e=>o.value.find(a=>a.id===e),I=e=>o.value.filter(a=>a.status===e);return V(()=>{T()}),{services:_(o),serviceMetrics:_(t),isLoading:_(n),error:_(s),isAutoRefreshEnabled:_(c),isRefreshing:_(u),onlineServices:h,offlineServices:l,checkingServices:d,criticalServices:$,checkServiceHealth:C,checkAllServicesHealth:b,refreshService:D,refreshAllServices:B,startAutoRefresh:A,stopAutoRefresh:T,toggleAutoRefresh:R,getServiceById:F,getServicesByStatus:I}};export{Q as A,J as D,W as F,X as P,ee as S,oe as T,N as _,Y as a,te as b,p as c,se as u};
